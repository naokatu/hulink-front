/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/user": {
    /** ユーザを取得する */
    get: operations["get-user"];
    /** ユーザを作成する */
    post: operations["post-user"];
  };
  "/link-user": {
    /** リンクユーザを一覧取得する */
    get: operations["get-link-user"];
    /** リンクユーザを作成する */
    post: operations["post-link-user"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** User */
    User: {
      /** Format: uuid */
      id: string;
      name: string;
      linkUser?: components["schemas"]["LinkUser"][];
      /** Format: date-time */
      registrationDate: string;
    };
    /** LinkUser */
    LinkUser: {
      /** Format: uuid */
      id: string;
      name: string;
      /** Format: int32 */
      encount: number;
      label?: string;
      sex?: string;
    };
    /** CreateUserInput */
    CreateUserInput: {
      name: string;
    };
    /** CreateLinkUserInput */
    CreateLinkUserInput: {
      name: string;
      encount: string;
      label?: string;
      sex?: string;
    };
    /** 400ValidationError */
    "400ValidationError": {
      code: string;
      errors: {
          path: string;
          message: string;
          errorcode?: string;
        }[];
    };
    /** 401Error */
    "401Error": {
      code: string;
      message: string;
    };
    /** 500Error */
    "500Error": {
      code: string;
      message: string;
    };
    /** 503Error */
    "503Error": {
      code: string;
      message: string;
    };
    /** Pagenation */
    Pagenation: {
      total?: number;
    };
    /** CreateUserError */
    CreateUserError: {
      code: string;
      message: string;
    };
    /** CreateLinkUserError */
    CreateLinkUserError: {
      code: string;
      message: string;
    };
  };
  responses: {
    /** @description Unauthorized */
    400: {
      content: {
        "application/json": components["schemas"]["400ValidationError"];
      };
    };
    /** @description Unauthorized */
    401: {
      content: {
        "application/json": components["schemas"]["401Error"];
      };
    };
    /** @description Internal Server Error */
    500: {
      content: {
        "application/json": components["schemas"]["500Error"];
      };
    };
    /** @description Service Unavailable */
    503: {
      content: {
        "application/json": components["schemas"]["503Error"];
      };
    };
  };
  parameters: {
    /** @description Pagenation limit */
    limit?: string;
    /** @description Pagenation offset */
    offset?: string;
    /** @description Bearer xxx */
    authorization?: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** ユーザを取得する */
  "get-user": {
    parameters: {
      header?: {
        /** @description Bearer xxx */
        authorization?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
        };
        content: {
          "application/json": {
            data: {
              user: components["schemas"]["User"];
            };
          };
          "application/xml": Record<string, never>;
        };
      };
    };
  };
  /** ユーザを作成する */
  "post-user": {
    parameters: {
      header?: {
        /** @description Bearer xxx */
        authorization?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateUserInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
        };
        content: {
          "application/json": {
            data?: {
              user: components["schemas"]["User"];
            };
            errors?: components["schemas"]["CreateUserError"][];
          };
        };
      };
    };
  };
  /** リンクユーザを一覧取得する */
  "get-link-user": {
    parameters: {
      header?: {
        /** @description Bearer xxx */
        authorization?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
        };
        content: {
          "application/json": {
            data: {
              linkUsers: components["schemas"]["LinkUser"][];
            };
          };
        };
      };
    };
  };
  /** リンクユーザを作成する */
  "post-link-user": {
    parameters: {
      header?: {
        /** @description Bearer xxx */
        authorization?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateLinkUserInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
        };
        content: {
          "application/json": {
            data?: {
              linkUsers: components["schemas"]["LinkUser"][];
            };
            errors?: components["schemas"]["CreateLinkUserError"][];
          };
        };
      };
    };
  };
}
